import * as zagSwitch from "@zag-js/switch"
import { normalizeProps } from "../normalize-props";
import styles from "./app-switch.module.css";
export type Input = (zagSwitch.Context & {
  renderBody: Marko.Body;
}
);

<const/machine=(() => zagSwitch.machine({
  checked: input.checked,
  dir: input.dir,
  disabled: input.disabled,
  form: input.form,
  getRootNode: input.getRootNode,
  id: input.id,
  ids: input.ids,
  invalid: input.invalid,
  label: input.label,
  name: input.name,
  onCheckedChange: input.onCheckedChange,
  required: input.required,
  value: input.value,  
}))/>

<use-machine/[machineState, send] machine=(machine as any)/>

<const/api=zagSwitch.connect(machineState as any, send, normalizeProps)/>

<return=api/>

<label class=styles.root ...api.rootProps>
  <input class=styles.input ...api.hiddenInputProps />
  <span class=styles.control ...api.controlProps>
    <span class=styles.thumb ...api.thumbProps />
  </span>
  <span class=styles.label ...api.labelProps>
    <${input.renderBody}/>
  </span>
</label>
